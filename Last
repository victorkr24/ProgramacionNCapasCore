using Microsoft.AspNetCore.Mvc;

namespace PL.Controllers
{
    public class UsuarioController : Controller
    {
        // GET: Usuario
        public ActionResult GetAll()
        {
            //llamo al get all de aseguradora
            ML.Result result = BL.Usuario.UsuarioGetAllEF();

            //creo una instancia de aseguradora
            ML.Usuario usuario = new ML.Usuario();

            //paso de mi lista result.objects a mi lista de aseguradoras
            usuario.Usuarios = result.Objects;
            //aseguradora.Aseguradoras = result.Objects;
            return View(usuario);
            //return View();
        }

        [HttpGet]
        public ActionResult Form(int? IdUsuario)
        {
            ML.Usuario usuario = new ML.Usuario();
            ML.Result resultRol = BL.Rol.RolAllEF();
            ML.Result resultPais = BL.Pais.GetAll();

            usuario.Rol = new ML.Rol();
            usuario.Pais = new ML.Pais();
            usuario.Rol.Roles = resultRol.Objects.ToList();

            usuario.Direccion = new ML.Direccion();
            usuario.Direccion.Colonia = new ML.Colonia();
            usuario.Direccion.Colonia.Municipio = new ML.Municipio();
            usuario.Direccion.Colonia.Municipio.Estado = new ML.Estado();
            usuario.Direccion.Colonia.Municipio.Estado.Pais = new ML.Pais();
        
            //usuario.Pais = new ML.Pais();
            usuario.Direccion.Colonia.Municipio.Estado.Pais.Paises = resultPais.Objects.ToList();

            

           //usuario.Pais.Paises = resultPais.Objects.ToList();

            // return View(usuario);

            if (IdUsuario == null)//ADD
            {

                return View(usuario);
            }
            else  //UPDATE
            {
                ML.Result result = BL.Usuario.GetByIdEF(IdUsuario.Value);

                if (result.Correct)
                {
                    //usuario = new ML.Usuario();
                    usuario = ((ML.Usuario)result.Object);
                    usuario.Rol = new ML.Rol();
                    usuario.Rol.Roles = resultRol.Objects;
                   
                    return View(usuario);
                }
            }
            return View(usuario);

        }




        [HttpPost]
        public ActionResult Form(ML.Usuario usuario)
        {
            ML.Result result = new ML.Result();

            if (usuario.IdUsuario != 0)
            {
                result = BL.Usuario.UpdateEF(usuario);

                if (result.Correct)
                {
                    ViewBag.Message = "Se actualizo el usuario";
                    return PartialView("Modal");
                }
                else
                {
                    ViewBag.Message = "No se actualizo" + result.ErrorMessage;
                    return PartialView("Modal");
                }
            }
            else
            {
                result = BL.Usuario.AddEF(usuario);

                if (result.Correct)
                {
                    ViewBag.Message = "Se ha registrado correctaente el producto";
                    return PartialView("Modal");
                }
                else
                {
                    ViewBag.Message = "Ha ocurrido un error" + result.ErrorMessage;
                    return PartialView("Modal");
                }
            }



        }
        [HttpGet]
        public ActionResult Delete(int IdUsuario)
        {
            ML.Usuario usuario = new ML.Usuario();
            usuario.IdUsuario = IdUsuario;

            ML.Result result = BL.Usuario.DeleteEF(usuario);
            if (result.Correct)
            {
                return RedirectToAction("GetAll");
            }
            else
            {
                return PartialView("Modal");
            }

        }
        public JsonResult EstadoGetByIdPais(int IdPais)
        {
            ML.Result result = BL.Estado.EstadoByIdPais(IdPais);

            return Json(result.Objects);
        }
        public JsonResult MunicipioGetByEstado(int IdEstado)
        {
            ML.Result result = BL.Municipio.MunicipioByIdEstado(IdEstado);

            return Json(result.Objects);
        }
        public JsonResult ColoniaGetByMunicipio(int IdMunicipio)
        {
            ML.Result result = BL.Colonia.ColoniaByIdMunicipio(IdMunicipio);

            return Json(result.Objects);
        }
    }
}
----------------------------------------------------------
@model ML.Usuario
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h1>Form</h1>

<div>

    <div class="row">
        <div class="col-md-12">
            <h3>@ViewBag.Titulo</h3>
            <h5>Ingrese los datos</h5>
            <hr />
        </div>
    </div>
    <hr>

    @* <div class="row" >
        <div class="col-md-12">*@
    @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/fomr-data" }))
    {
        <div class="form-horizontal">

            <div class="form-group">

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.IdUsuario, new { @class = " hidden form-control  ", })
                    @Html.ValidationMessageFor(model => model.IdUsuario)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, new { @class = "control-label col-md-2 " })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control ", })
                    @Html.ValidationMessageFor(model => model.Nombre)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApellidoPaterno, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApellidoMaterno, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sexo, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sexo)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Telefono)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Celular, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Celular, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Celular)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FechaNacimiento, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FechaNacimiento)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CURP, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CURP, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CURP)
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Rol.IdRol, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                @Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Rol.IdRol)
                </div>
                </div>*@

            <!---->
        <div class="form-group">
                @Html.LabelFor(model => model.Rol.IdRol, new { @class = "control-label col-md-2" })
                <div class="col-md-3">

                    @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona una opcion", new { @class = "form-control" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new { @class = "control-label col-md-2" })
                <div class="col-md-3">

                    @Html.DropDownListFor(model => model.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una pais", new { @class = "form-control" ,@id ="ddlPais"})
                </div>
            </div>



            @*-----------------------*@
            <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Estados)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-calendar-plus-fill" style="color: midnightblue"></i></span>
                    @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Direccion"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                    }
                </div>
            </div>
            @*-----------------------*@

            <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Municipios)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-calendar-plus-fill" style="color: midnightblue"></i></span>
                    @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Direccion"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                    }
                </div>
            </div>
            @*-----------------------*@
             <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion.Colonia.Colonias)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-calendar-plus-fill" style="color: midnightblue"></i></span>
                    @if (Model.Direccion.Colonia.Colonias == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Direccion"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                    }
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@ViewBag.Accion" class="btn btn-success" />
                </div>
            </div>
        </div>

    }
</div>

<div class="row">
    <div class="col-md-2">
        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
    </div>
</div>


@section Scripts
{
<script src="~/lib/jquery/dist/jquery.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
               $("#ddlPais").change(function () {
                   $("#ddlEstado").empty();
                   $.ajax({
                       type: 'GET',
                       url: '@Url.Action("EstadoGetByIdPais")',
                       dataType: 'json',
                       data: { IdPais: $("#ddlPais").val() },
                       success: function (estados) {
                           $("#ddlEstado").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                           $.each(estados, function (i, estados) {
                               $("#ddlEstado").append('<option value="'
                                                          + estados.idEstado + '">'
                                                          + estados.nombre + '</option>');
                           });
                       },
                       error: function (ex) {
                           alert('Failed.' + ex);
                       }
                   });
               });

                $("#ddlEstado").change(function () {
                   $("#ddlMunicipio").empty();
                   $.ajax({
                       type: 'GET',
                       url: '@Url.Action("MunicipioGetByEstado")',
                       dataType: 'json',
                       data: { IdEstado: $("#ddlEstado").val() },
                       success: function (municipios) {
                           $("#ddlMunicipio").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                           $.each(municipios, function (i, municipios) {
                               $("#ddlMunicipio").append('<option value="'
                                                          + municipios.idMunicipio + '">'
                                                          + municipios.nombre + '</option>');
                           });
                       },
                       error: function (ex) {
                           alert('Failed.' + ex);
                         }
                    });
                });

                
                $("#ddlMunicipio").change(function () {
                   $("#ddlColonia").empty();
                   $.ajax({
                       type: 'GET',
                       url: '@Url.Action("ColoniaGetByIdMunicipio")',
                       dataType: 'json',
                       data: { IdMunicipio: $("#ddlMunicipio").val() },
                       success: function (colonias) {
                           $("#ddlMunicipio").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                           $.each(municipios, function (i, colonias) {
                               $("#ddlMunicipio").append('<option value="'
                                                          + colonias.idColonia + '">'
                                                          + colonias.nombre + '</option>');
                           });
                       },
                       error: function (ex) {
                           alert('Failed.' + ex);
                         }
                    });
                });
      });


</script>

}
------------------------------------------
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BL
{
    public  class Municipio
    {
        public static ML.Result MunicipioByIdEstado(int IdEstado)
        {
            ML.Result result = new ML.Result();

            try
            {
                using (DL.VAvilesProgramacionNCapasContext context = new DL.VAvilesProgramacionNCapasContext())
                {

                    //var aseguradoras = context.Aseguradoras.FromSqlRaw($"AseguradoraGetAll").ToList();
                    var query = context.Municipios.FromSqlRaw($"MunicipioGetByIdEstado  {IdEstado}").ToList();

                    result.Objects = new List<object>();

                    if (query != null)
                    {
                        foreach (var obj in query)
                        {
                            ML.Municipio municipio = new ML.Municipio();

                            municipio.IdMunicipio = obj.IdMunicipio;
                            municipio.Nombre = obj.Nombre;

                            municipio.Estado = new ML.Estado();
                            municipio.Estado.IdEstado = obj.IdMunicipio;

                            result.Objects.Add(municipio);
                        }

                        result.Correct = true;
                    }
                    else
                    {
                        result.Correct = false;
                        result.ErrorMessage = "No se encontraron registros.";
                    }
                }
            }
            catch (Exception ex)
            {

                result.Correct = false;
                result.ErrorMessage = ex.Message;

            }

            return result;
        }
    }
}
------------------------------------------------------------------------
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BL
{
    public class Colonia
    {
        public static ML.Result ColoniaByIdMunicipio(int IdMunicipio)
        {
            ML.Result result = new ML.Result();

            try
            {
                using (DL.VAvilesProgramacionNCapasContext context = new DL.VAvilesProgramacionNCapasContext())
                {

                    //var aseguradoras = context.Aseguradoras.FromSqlRaw($"AseguradoraGetAll").ToList();
                    var query = context.Colonia.FromSqlRaw($"MunicipioGetByIdEstado  {IdMunicipio}").ToList();

                    result.Objects = new List<object>();

                    if (query != null)
                    {
                        foreach (var obj in query)
                        {
                            ML.Colonia colonia = new ML.Colonia();

                            colonia.IdColonia = obj.IdColonia;
                            colonia.Nombre = obj.Nombre;
                            colonia.CodigoPostal = obj.CodigoPostal;


                            colonia.Municipio = new ML.Municipio();
                            colonia.Municipio.IdMunicipio = obj.IdColonia;

                            result.Objects.Add(colonia);
                        }

                        result.Correct = true;
                    }
                    else
                    {
                        result.Correct = false;
                        result.ErrorMessage = "No se encontraron registros.";
                    }
                }
            }
            catch (Exception ex)
            {

                result.Correct = false;
                result.ErrorMessage = ex.Message;

            }

            return result;
        }
    }
}

